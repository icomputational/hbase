<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.hbase</groupId>
  <artifactId>hbase</artifactId>
  <packaging>jar</packaging>
  <version>${hbase.version}</version>
  <name>HBase</name>
  <description>
  HBase is the &amp;lt;a href="http://hadoop.apache.org"&amp;rt;Hadoop&lt;/a&amp;rt; database. Use it when you need random, realtime read/write access to your Big Data.
    This project's goal is the hosting of very large tables -- billions of rows X millions of columns -- atop clusters
    of commodity hardware.
  </description>
  <url>http://hbase.apache.org</url>

  <licenses>
    <license>
      <name>Apache 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>

  <organization>
    <name>Apache Software Foundation</name>
    <url>http://www.apache.org</url>
  </organization>

  <scm>
    <connection>scm:svn:http://svn.apache.org/repos/asf/hbase/trunk</connection>
    <developerConnection>scm:svn:https://svn.apache.org/repos/asf/hbase/trunk</developerConnection>
    <url>http://svn.apache.org/viewvc/hbase/trunk</url>
  </scm>

  <issueManagement>
    <system>JIRA</system>
    <url>http://issues.apache.org/jira/</url>
  </issueManagement>

  <ciManagement>
    <system>hudson</system>
    <url>http://hudson.zones.apache.org/hudson/view/HBase/</url>
  </ciManagement>

  <mailingLists>
    <mailingList>
      <name>User List</name>
      <subscribe>user-subscribe@hbase.apache.org</subscribe>
      <unsubscribe>user-unsubscribe@hbase.apache.org</unsubscribe>
      <post>user@hbase.apache.org</post>
      <archive>http://mail-archives.apache.org/mod_mbox/hbase-user/</archive>
      <otherArchives>
        <otherArchive>http://dir.gmane.org/gmane.comp.java.hadoop.hbase.user</otherArchive>
        <otherArchive>http://search-hadoop.com/?q=&amp;fc_project=HBase</otherArchive>
      </otherArchives>
    </mailingList>
    <mailingList>
      <name>Developer List</name>
      <subscribe>dev-subscribe@hbase.apache.org</subscribe>
      <unsubscribe>dev-unsubscribe@hbase.apache.org</unsubscribe>
      <post>dev@hbase.apache.org</post>
      <archive>http://mail-archives.apache.org/mod_mbox/hbase-dev/</archive>
      <otherArchives>
        <otherArchive>http://dir.gmane.org/gmane.comp.java.hadoop.hbase.devel</otherArchive>
        <otherArchive>http://search-hadoop.com/?q=&amp;fc_project=HBase</otherArchive>
      </otherArchives>
    </mailingList>
    <mailingList>
      <name>Commits List</name>
      <subscribe>commits-subscribe@hbase.apache.org</subscribe>
      <unsubscribe>commits-unsubscribe@hbase.apache.org</unsubscribe>
      <archive>http://mail-archives.apache.org/mod_mbox/hbase-commits/</archive>
    </mailingList>
    <mailingList>
      <name>Issues List</name>
      <subscribe>issues-subscribe@hbase.apache.org</subscribe>
      <unsubscribe>issues-unsubscribe@hbase.apache.org</unsubscribe>
      <archive>http://mail-archives.apache.org/mod_mbox/hbase-issues/</archive>
    </mailingList>
  </mailingLists>

  <developers>
    <developer>
      <id>apurtell</id>
      <name>Andrew Purtell</name>
      <email>apurtell@apache.org</email>
      <timezone>-8</timezone>
      <organization>Trend Micro</organization>
      <organizationUrl>http://www.trendmicro.com</organizationUrl>
    </developer>
    <developer>
      <id>jdcryans</id>
      <name>Jean-Daniel Cryans</name>
      <email>jdcryans@apache.org</email>
      <timezone>-8</timezone>
      <organization>StumbleUpon</organization>
      <organizationUrl>http://www.stumbleupon.com</organizationUrl>
    </developer>
    <developer>
      <id>jgray</id>
      <name>Jonathan Gray</name>
      <email>jgray@streamy.com</email>
      <timezone>-8</timezone>
      <organization>Streamy</organization>
      <organizationUrl>http://www.streamy.com</organizationUrl>
    </developer>
    <developer>
      <id>larsgeorge</id>
      <name>Lars George</name>
      <email>larsgeorge@apache.org</email>
      <timezone>+1</timezone>
      <organization>WorldLingo</organization>
      <organizationUrl>http://www.worldlingo.com/</organizationUrl>
    </developer>
    <developer>
      <id>rawson</id>
      <name>Ryan Rawson</name>
      <email>rawson@apache.org</email>
      <timezone>-8</timezone>
      <organization>StumbleUpon</organization>
      <organizationUrl>http://www.stumbleupon.com</organizationUrl>
    </developer>
    <developer>
      <id>stack</id>
      <name>Michael Stack</name>
      <email>stack@apache.org</email>
      <timezone>-8</timezone>
      <organization>StumbleUpon</organization>
      <organizationUrl>http://www.stumbleupon.com/</organizationUrl>
    </developer>
    <developer>
      <id>todd</id>
      <name>Todd Lipcon</name>
      <email>todd@apache.org</email>
      <timezone>-8</timezone>
      <organization>Cloudera</organization>
      <organizationUrl>http://www.cloudera.com</organizationUrl>
    </developer>
  </developers>
  
  <profiles>
    <profile>
      <id>default_jdk</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <jdk>${env.JAVA_HOME}</jdk>
      </properties>
    </profile>
    <profile>
      <id>jdk6</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <jdk>/usr/local/jdk-6u14-64</jdk>
      </properties>
    </profile>
    <profile>
      <id>jdk7</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <jdk>/usr/local/jdk-7u6-64</jdk>
      </properties>
    </profile>
    <profile>
         <id>usingJDK7</id>
         <activation>
             <jdk>1.7</jdk>
         </activation>
         <build>
             <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>report</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <skip>${hbase.skip-jacoco}</skip>
                        <excludes>
                        <exclude>**/generated/**/*.class</exclude>
                        <exclude>org/apache/hadoop/hbase/rest/**/*.class</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <systemPropertyVariables>
                            <jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
             </plugins>
         </build>
     </profile>
    <profile>
         <id>usingJDK8</id>
         <activation>
             <jdk>1.8</jdk>
         </activation>
         <build>
             <plugins>
                 <plugin>
                     <groupId>org.apache.maven.plugins</groupId>
                     <artifactId>maven-surefire-plugin</artifactId>
                 </plugin>
             </plugins>
         </build>
     </profile>
     <profile>
         <id>unstableTests</id>
         <activation>
             <activeByDefault>false</activeByDefault>
         </activation>
         <properties>
             <surefire.skipFirstPart>true</surefire.skipFirstPart>
             <surefire.excludedGroups></surefire.excludedGroups>
             <surefire.secondPartGroups>org.apache.hadoop.hbase.UnstableTests</surefire.secondPartGroups>
         </properties>
     </profile>
      <profile>
          <id>allStableTests</id>
          <activation>
              <activeByDefault>false</activeByDefault>
          </activation>
          <properties>
              <surefire.secondPartGroups>org.apache.hadoop.hbase.MediumTests,org.apache.hadoop.hbase.LargeTests</surefire.secondPartGroups>
          </properties>
      </profile>
  </profiles>
  
  <repositories>
    <repository>
      <id>mirror.facebook.net</id>
      <name>facebook mirror</name>
      <url>http://mirror.facebook.net/maven/repository/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>java.net</id>
      <name>Java.Net</name>
      <url>http://download.java.net/maven/2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>googlecode</id>
      <name>Google Code</name>
      <url>http://google-maven-repository.googlecode.com/svn/repository/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>codehaus</id>
      <name>Codehaus Public</name>
      <url>http://repository.codehaus.org/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>temp-hadoop</id>
      <name>Hadoop 0.20.1/2 packaging, thrift, zk</name>
      <url>http://people.apache.org/~rawson/repo/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <repository>
      <id>ibiblio.org</id>
      <name>ibiblio mirror</name>
      <url>http://mirrors.ibiblio.org/pub/mirrors/maven2/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>

  <!-- We need pluginRepositories here so that the map-reduce JUnit test
       runner can find where to insert the local repository. -->
  <pluginRepositories>
  </pluginRepositories>

  <build>
    <!-- Some plugins (javadoc for example) can be used in the normal build- and the site phase.
         These plugins inherit their options from the <reporting> section below. These settings
         can be overwritten here. -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>2.5.2</version>
          <configuration>
            <findbugsXmlOutput>true</findbugsXmlOutput>
            <xmlOutput>true</xmlOutput>
            <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.1</version>
          <configuration>
            <source>${compileSource}</source>
            <target>${compileSource}</target>
            <showWarnings>true</showWarnings>
            <showDeprecation>false</showDeprecation>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.2-beta-5</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.1</version>
        </plugin>
          <plugin>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>${surefire.version}</version>
              <dependencies>
                  <!-- by default surefire selects dynamically the connector to the unit tests
                    tool. We want to use always the same as the different connectors can have different
                    bugs and behaviour. -->
                  <dependency>
                      <groupId>org.apache.maven.surefire</groupId>
                      <artifactId>${surefire.provider}</artifactId>
                      <version>${surefire.version}</version>
                  </dependency>
              </dependencies>
              <!-- Generic testing configuration for all packages -->
              <configuration>
                  <failIfNoTests>false</failIfNoTests>
                  <skip>${surefire.skipFirstPart}</skip>
                  <!-- surefire hack, if not we're
                    using method parallelization class ! -->
                  <testFailureIgnore>${surefire.testFailureIgnore}</testFailureIgnore>
                  <forkedProcessTimeoutInSeconds>${surefire.timeout}</forkedProcessTimeoutInSeconds>
                  <argLine>${surefire.argLine}</argLine>
                  <redirectTestOutputToFile>true</redirectTestOutputToFile>
                  <groups>${surefire.firstPartGroups}</groups>
                  <excludedGroups>${surefire.excludedGroups}</excludedGroups>
                  <forkMode>always</forkMode>
                  <forkCount>2</forkCount>
                  <threadCount>2</threadCount>
                  <parallel>classes</parallel>
              </configuration>
              <executions>
                  <execution>
                      <id>secondPartTestsExecution</id>
                      <phase>test</phase>
                      <goals>
                          <goal>test</goal>
                      </goals>
                      <configuration>
                          <forkMode>always</forkMode>
                          <forkCount>1</forkCount>
                          <threadCount>1</threadCount>
                          <parallel>classes</parallel>
                          <skip>${surefire.skipSecondPart}</skip>
                          <testFailureIgnore>${surefire.testFailureIgnore}</testFailureIgnore>
                          <forkMode>always</forkMode>
                          <groups>${surefire.secondPartGroups}</groups>
                      </configuration>
                  </execution>
              </executions>
          </plugin>
          <plugin>
              <artifactId>maven-surefire-report-plugin</artifactId>
              <version>${surefire.version}</version>
          </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.6.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.4</version>
            <configuration>
              <filesets>
                <fileset>
                  <!--dfs tests have build dir hardcoded. Clean it as part of
                      clean target-->
                  <directory>build</directory>
                </fileset>
              </filesets>
            </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.rat</groupId>
          <artifactId>apache-rat-plugin</artifactId>
        </plugin>
      </plugins>
    </pluginManagement>
    <resources>
      <resource>
        <directory>src/main/resources/</directory>
        <includes>
          <include>hbase-default.xml</include>
        </includes>
      </resource>
      <resource>
          <directory>${project.build.directory}</directory>
        <includes>
            <include>hbase-webapps/**</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <tarLongFileMode>gnu</tarLongFileMode>
          <descriptors>
            <descriptor>src/assembly/bin.xml</descriptor>
            <descriptor>src/assembly/src.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>

      <!-- Run with -Dmaven.test.skip.exec=true to build -tests.jar without running tests (this is needed for upstream projects whose tests need this jar simply for compilation)-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <manifest>
              <mainClass>org/apache/hadoop/hbase/mapreduce/Driver</mainClass>
            </manifest>
          </archive>
          <!-- Exclude these 2 packages, because their dependency _binary_ files include the sources, and Maven 2.2 appears to add them to the sources to compile, weird-->
          <excludes>
            <exclude>org/apache/jute/**</exclude>
            <exclude>org/apache/zookeeper/**</exclude>
            <exclude>**/*.jsp</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-test-sources</id>
            <phase>package</phase>
            <goals>
              <goal>test-jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate</id>
            <phase>generate-sources</phase>
            <configuration>
              <tasks>
                <property name="build.webapps"
                  location="${project.build.directory}/hbase-webapps" />
                <property name="src.webapps"
                  location="${basedir}/src/main/resources/hbase-webapps" />
                <property name="generated.sources"
                  location="${project.build.directory}/generated-sources" />

                <mkdir dir="${build.webapps}"/>
                <copy todir="${build.webapps}">
                  <fileset dir="${src.webapps}">
                    <exclude name="**/*.jsp" />
                    <exclude name="**/.*" />
                    <exclude name="**/*~" />
                  </fileset>
                </copy>

                <!--The compile.classpath is passed in by maven-->
                <taskdef classname="org.apache.jasper.JspC" name="jspcompiler" classpathref="maven.compile.classpath"/>

                <mkdir dir="${build.webapps}/master/WEB-INF"/>
                <jspcompiler uriroot="${src.webapps}/master"
                    outputdir="${generated.sources}"
                  package="org.apache.hadoop.hbase.generated.master"
                  webxml="${build.webapps}/master/WEB-INF/web.xml"/>

                <mkdir dir="${build.webapps}/regionserver/WEB-INF"/>
                <jspcompiler uriroot="${src.webapps}/regionserver"
                    outputdir="${generated.sources}"
                  package="org.apache.hadoop.hbase.generated.regionserver"
                  webxml="${build.webapps}/regionserver/WEB-INF/web.xml"/>

                <mkdir dir="${build.webapps}/taskmonitor/WEB-INF"/>
                <jspcompiler uriroot="${src.webapps}/taskmonitor"
                    outputdir="${generated.sources}"
                  package="org.apache.hadoop.hbase.generated.taskmonitor"
                  webxml="${build.webapps}/taskmonitor/WEB-INF/web.xml"/>

                <exec executable="sh">
                    <arg line="${basedir}/src/saveVersion.sh ${project.version} ${generated.sources}"/>
                </exec>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>add-jspc-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/target/jspc</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-package-info</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
      	<groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
        	<execution>
            	<goals>
                	<goal>enforce</goal>
                </goals>
                <configuration>
                	<rules>
                    	<requireUpperBoundDeps>
                        	<uniqueVersions>true</uniqueVersions>
                        </requireUpperBoundDeps>
                    </rules>
                </configuration>
            </execution>
        </executions>
      </plugin>
      <plugin>
      	<artifactId>maven-eclipse-plugin</artifactId>
       	<version>2.9</version>
        <configuration>
        	<downloadSources>true</downloadSources>
          	<downloadJavadocs>true</downloadJavadocs>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <properties>
    <compileSource>1.7</compileSource>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <hbase.version>0.21.0-SNAPSHOT</hbase.version>
    <hadoop.version>4.41819</hadoop.version>
    <swift.version>0.12.0</swift.version>
    <commons-cli.version>1.2</commons-cli.version>
    <commons-io.version>2.1</commons-io.version>
    <commons-logging.version>1.1.1</commons-logging.version>
    <jetty.version>6.1.24</jetty.version>
    <jetty.jspapi.version>6.1.14</jetty.jspapi.version>
    <netty.version>3.7.0.Final</netty.version>
    <junit.version>4.11</junit.version>
    <mockito-all.version>1.9.5</mockito-all.version>
    <log4j.version>1.2.17</log4j.version>
    <zookeeper.version>3.4.3</zookeeper.version>
    <commons-httpclient.version>3.1</commons-httpclient.version>
    <commons-lang.version>2.5</commons-lang.version>
    <commons-math.version>2.1</commons-math.version>
    <jasper.version>5.5.23</jasper.version>
    <jaxb-api.version>2.2.2 </jaxb-api.version>
    <jersey.version>1.9.1</jersey.version>
    <jruby.version>1.4.0</jruby.version>
    <jsr311.version>1.1.1</jsr311.version>
    <protobuf.version>2.3.0</protobuf.version>
    <slf4j.version>1.7.5</slf4j.version>
    <thrift.version>0.9.1</thrift.version>
    <guava.version>16.0.1</guava.version>
    <jackson.version>1.9.5</jackson.version>
    <commons-pool.version>1.6</commons-pool.version>
    <hbase.skip-jacoco>false</hbase.skip-jacoco>
    <jacoco.version>0.6.2.201302030002</jacoco.version>

    <surefire.version>2.15</surefire.version>
    <surefire.provider>surefire-junit47</surefire.provider>
    <surefire.argLine>-enableassertions -Xmx4g -Djava.security.egd=file:/dev/./urandom
        -Djava.awt.headless=true -Djava.library.path=${basedir}/lib/native/Linux-amd64-64/
    </surefire.argLine>
    <surefire.skipFirstPart>false</surefire.skipFirstPart>
    <surefire.skipSecondPart>false</surefire.skipSecondPart>
    <surefire.firstPartGroups>org.apache.hadoop.hbase.SmallTests</surefire.firstPartGroups>
    <surefire.secondPartGroups>org.apache.hadoop.hbase.MediumTests</surefire.secondPartGroups>
    <surefire.testFailureIgnore>true</surefire.testFailureIgnore>
    <test.output.tofile>true</test.output.tofile>
    <surefire.timeout>900</surefire.timeout>
    <surefire.excludedGroups>org.apache.hadoop.hbase.UnstableTests</surefire.excludedGroups>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.facebook.hadoop</groupId>
        <artifactId>hadoop-core</artifactId>
        <version>${hadoop.version}</version>
        <exclusions>
            <exclusion>
                <!-- Swift uses a newer version named io.netty:netty -->
                <groupId>org.jboss.netty</groupId>
                <artifactId>netty</artifactId>
            </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
        <exclusions>
          <exclusion>
            <!-- Swift uses a newer version named io.netty:netty -->
            <groupId>org.jboss.netty</groupId>
            <artifactId>netty</artifactId>
            </exclusion>
        </exclusions>
      </dependency>

      <!-- Info server dependencies -->
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>servlet-api-2.5</artifactId>
        <version>${jetty.jspapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jsp-2.1</artifactId>
        <version>${jetty.jspapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jsp-api-2.1</artifactId>
        <version>${jetty.jspapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty</artifactId>
         <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-util</artifactId>
        <version>${jetty.version}</version>
      </dependency>

      <!-- Common Deps -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-pool</groupId>
        <artifactId>commons-pool</artifactId>
        <version>${commons-pool.version}</version>
      </dependency>

      <!-- Swift/Nifty dependencies -->
      <dependency>
        <groupId>com.facebook.swift</groupId>
        <artifactId>swift-root</artifactId>
        <version>${swift.version}</version>
      </dependency>
      <dependency>
         <groupId>com.facebook.swift</groupId>
         <artifactId>swift-codec</artifactId>
         <version>${swift.version}</version>
      </dependency>
      <dependency>
         <groupId>com.facebook.swift</groupId>
         <artifactId>swift-service</artifactId>
         <version>${swift.version}</version>
      </dependency>
      <dependency>
         <groupId>com.facebook.swift</groupId>
         <artifactId>swift-annotations</artifactId>
         <version>${swift.version}</version>
      </dependency>
       <dependency>
         <groupId>com.facebook.nifty</groupId>
         <artifactId>nifty-header-protocol</artifactId>
         <version>${swift.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty</artifactId>
        <version>${netty.version}</version>
      </dependency>
        <!--
        This is highly dubious!

        We need SLF4J >= 1.5.6 and Thrift depends on that version.
        hadoop-core on the other hand depends on SLF4J 1.4.3 (even though it is optional)
        and Mavens dependency resolution mechanism choses the 'nearest' dependency in case
        of a conflict of dependencies on the same level. The nearest is always the one
        that was defined first in the pom:
        http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html

        That's why we've added an explicit dependency to SFL4J-API even though we don't need it.
        Make sure to check the version of SLF4J Hadoop and Thrift depend on when you upgrade
        one of them.
        -->
      <dependency>
        <groupId>org.apache.thrift</groupId>
        <artifactId>libthrift</artifactId>
        <version>${thrift.version}</version>
        <exclusions>
            <exclusion>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
            </exclusion>
        </exclusions>
      </dependency>

      <!-- Shell deps -->
      <dependency>
        <groupId>org.jruby</groupId>
        <artifactId>jruby-complete</artifactId>
        <version>${jruby.version}</version>
      </dependency>

      <!-- Logging dependencies -->
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging.version}</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
        <exclusions>
            <exclusion>
                <groupId>javax.jms</groupId>
                <artifactId>jms</artifactId>
            </exclusion>
            <exclusion>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
            </exclusion>
            <exclusion>
                <groupId>com.sun.jmx</groupId>
                <artifactId>jmxri</artifactId>
            </exclusion>
            <exclusion>
                <groupId>com.sun.jdmk</groupId>
                <artifactId>jmxtools</artifactId>
            </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- Test dependencies -->
      <dependency>
        <groupId>com.facebook.hadoop</groupId>
        <artifactId>hadoop-core-test</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito-all.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.6</version>
      </dependency>
      <dependency>
      	<groupId>javax.validation</groupId>
      	<artifactId>validation-api</artifactId>
      	<version>1.1.0.Final</version>
      </dependency>


      <dependency>
      	<groupId>org.codehaus.jackson</groupId>
      	<artifactId>jackson-core-asl</artifactId>
      	<version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${jackson.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>com.facebook.titan.prometheus</groupId>
      <artifactId>compactionhook</artifactId>
      <version>2014-02-26T19.17.36-bac5a85</version>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>${commons-httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.thrift</groupId>
      <artifactId>libthrift</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>com.facebook.hadoop</groupId>
      <artifactId>hadoop-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jetty-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>servlet-api-2.5</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jsp-2.1</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>jsp-api-2.1</artifactId>
    </dependency>
    <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty</artifactId>
    </dependency>

    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby-complete</artifactId>
    </dependency>

    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>
    <dependency>
        <groupId>com.facebook.swift</groupId>
        <artifactId>swift-codec</artifactId>
    </dependency>
    <dependency>
        <groupId>com.facebook.swift</groupId>
        <artifactId>swift-service</artifactId>
    </dependency>
    <dependency>
        <groupId>com.facebook.nifty</groupId>
        <artifactId>nifty-header-protocol</artifactId>
    </dependency>

    <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
    </dependency>


      <!-- Test dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <scope>test</scope>
    </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <scope>test</scope>
    </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math</artifactId>
        <version>${commons-math.version}</version>
        <scope>test</scope>
    </dependency>
      <dependency>
         <groupId>com.facebook.hadoop</groupId>
         <artifactId>hadoop-core-test</artifactId>
         <scope>test</scope>
     </dependency>
  </dependencies>

  <distributionManagement>
  </distributionManagement>

  <!-- See http://jira.codehaus.org/browse/MSITE-443 why the settings need to be here and not in pluginManagement. -->
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>2.1.2</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>project-team</report>
              <report>mailing-list</report>
              <report>cim</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>scm</report>
              <report>index</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <targetJdk>${compileSource}</targetJdk>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.5</version>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <inputEncoding>UTF-8</inputEncoding>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.6.1</version>
        <configuration>
          <docfilessubdirs>true</docfilessubdirs>
        </configuration>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>javadoc</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${surefire.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>
